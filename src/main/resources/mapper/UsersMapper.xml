<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Mapperとxmlのマッピング -->
<mapper namespace="calculators.project.spring.mapper.UserMapper">

<!-- マッピング定義(usersテーブル -> MUserクラス) -->
<!--
<resultMap type="todo.project.spring.model.MUser" id="muser">
	<id column="id" property="id" />
	<result column="name" property="name" />
	<result column="password" property="password" />
	<result column="admin" property="admin"/>
</resultMap>
 -->

<!-- ユーザーＩＤからユーザー情報１件取得 -->
<select id="findUserOneUserId" resultType="LoginUser">
	SELECT
		id,
		userName,
		userId,
		password,
		role
	FROM
		users
	WHERE
		#{userId} = userId
</select>

<!-- ユーザー１件追加 -->
<insert id="addUserOne">
	INSERT INTO
		users(
			userName,
			userId,
			password
		) VALUES(
			#{userName},
			#{userId},
			#{password}
		)
</insert>

<!-- ユーザー名更新 -->
<update id="updateUserName">
	UPDATE
		users
	SET
		userName = #{userName}
	WHERE
		id = #{id}
</update>

<!-- ユーザー情報更新 -->
<update id="updateUserIdPassword">
	UPDATE
		users
	SET
		<if test="newUserId != null">
			userId = #{newUserId}
		</if>
		<if test="newUserId != null and newPassword != null">
			,
		</if>
		<if test="newPassword != null">
			password = #{newPassword}
		</if>
	WHERE
		id = #{id} AND
		userId = #{nowUserId}
</update>

<!--
<select id="findUserOne" resultMap="muser">
	select
		id,
		name,
		admin
	from
		`users`
	where
		#{name} = name AND
		#{password} = password
</select>

<select id="findUserOneName" resultType="muser">
	select
		*
	from
		users
	where
		#{name} = name;
</select>

<select id="findUserOneId" resultMap="muser">
	select
		id,
		name,
		admin
	from
		`users`
	where
		#{id} = id
</select>

<select id="findUserAll" resultMap="muser">
	select
		id,
		name,
		admin
	from
		`users`
</select>

<select id="searchUserAll" resultMap="muser">
	select
		id,
		name,
		admin
	from
		users
	where
		name LIKE CONCAT('%', #{order}, '%')
</select>

<select id="getUserNameFromId" resultType="String">
	select
		name
	from
		`users`
	where
		id = #{id}
</select>

<select id="getUserOneAllStatus" resultMap="muser">
	select
		*
	from
		users
	where
		id = #{id}
</select>

<select id="countUserName" resultType="int">
select
	count(
		*
	)
from
	`users`
where
	name = #{userName}
</select>

<insert id="addUser">
	INSERT INTO users(
		name,
		password,
		admin
	) VALUES(
		#{name},
		#{password},
		#{admin}
	)
</insert>

<delete id="deleteUser">
	DELETE FROM
		users
	WHERE
		id = #{id}
</delete>

<update id="updateUser">
	UPDATE
		users
	SET
		name = #{name},
		password = #{password},
		admin = #{admin}
	WHERE
		id = #{id}
</update>
 -->

</mapper>